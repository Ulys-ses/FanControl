Параметры (хранятся на сервере):
•	TimeGetParams - промежуток времени между запросами параметров
•	TimeSaveProbValues - промежуток времени между сохранениями показаний датчиков
•	RestTimeWorkHard - время проветривания туалета
•	RestTimeShine - время горения лампы для включения проветривания
•	RestShineLevel - уровень освещенности в туалете
•	RestLowFreq - частота постоянного режима в туалете
•	RestHighFreq - частота интенсивного режима в туалете
•	BathLowFreq - частота постоянного режима в ванной
•	BathHighFreq - частота интенсивного режима в ванной
•	BathHudimOn - пороговое значение влажности для включения проветривания в ванной
•	BathHudimOff - пороговое значение влажности для вЫключения проветривания в ванной

Каждый вентилятор независимо работает в 2-х режимах: 
•	постоянном (*LowFreq)
•	усиленном (*HighFreq)
Возможно, потом добавим 3-ий.

Ванная - усиленный включается по достижении 2-го порогового значения влажности (BathHudimOn), выключается по достижении 1-го (BathHudimOff).

Туалет - усиленный включается на заданное время после горения света в течение заданного промежутка.

Цикл работы:
•	Получить параметры от сервера - с заданной периодичностью (TimeGetParams). 
•	
•	Прочитать влажность
•	Записать влажность  - с заданной периодичностью (TimeSaveProbValues).
•	Если влажность > BathHudimOn - включить режим проветривания.
•	Если влажность < BathHudimOff - включить постоянный режим.
•	Записать частоту вентилятора (если изменилась).
•	
•	Прочитать освещенность.
•	Сохранить освещенность с заданной периодичностью (TimeSaveProbValues).
•	Если освещенность > порога (RestShineLevel) - увеличить время.
•	Если освещенность < порога - сохранить время, сравнить время с RestTimeShine и сбросить время. 
	o	Если время больше - установить время проветривания = RestTimeWorkHard+1.
•	Если время проветривания > 0 - включить интенсивный режим и уменьшить время на 1, иначе - включить постоянный режим.
•	Записать частоту вентилятора (если изменилась).

АПИ сервера (json, flask):
•	Получить параметры - списком
•	Установить параметр по имени
•	Получить данные датчиков (период, код датчика).
•	Сохранить данные датчика (код датчика, значение)
•	Удалить показания датчиков (дата-время)

АРМ (VUE.js - ?):
•	Просмотр и редактирование параметров.
•	Просмотр датчиков (по типам).
•	Очистка старых показаний.

Структура данных в БД (MySQL, PostgreSQL - ?):
•	Таблица параметров (имя - значение).
•	Таблица датчиков (время - код - значение).

Коды датчиков:
•	BH - влажность в ванной
•	BL - уровень вентилятора в ванной
•	RS - освещенность в туалете
•	RT - время повышенной освещенности в туалете
•	RL - уровень вентилятора в туалете

Структура сервера:
/home/ubuntu/
	ParameterServer/
		FanControl/
			Data/
				FanControl.db
			CreateDB.py
